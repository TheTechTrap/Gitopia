<!DOCTYPE html>
<html lang='en-US'>

<head>
  <title>dgit</title>
  <link rel="manifest" href="/manifest.json" />
  <meta name="Description" content="Editor with git for everyone">
  <meta charset="utf8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />



  <!--Replace with your tailwind.css once created-->

  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700" rel="stylesheet">
  <link rel="preload" href="/main.js" as="text/javascript">

  <!-- Define your gradient here - use online tools to find a gradient matching your branding-->
  <style>

  </style>
  <!-- <style>
    html,
    body {
      overflow: hidden;
      width: 100vw;
      height: 100vh;
      margin: 0;
    }

    @media (max-width: 767px) {

      html,
      body {
        overflow: visible;
      }
    }
  </style> -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link href="https://fonts.googleapis.com/css?family=Nunito+Sans:300,400,600,700,800,900" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/railscasts.min.css">

  <link rel="author" href="humans.txt">
</head>

<body class="landing-body" style="font-family: 'Source Sans Pro', sans-serif;">
  <div class=root>
    <div class="content-skeleton"></div>


  </div>
  <script nomodule type=text/javascript>
  document.body.innerHTML = "Please use modern browser. (I checked to work only latest chrome)"
  </script>
  <script type=module>
  // relative path from root
  const IS_LOCALHOST = location.href.indexOf("localhost") > -1
const USE_SW = !IS_LOCALHOST

console.log(USE_SW)

;(async () => {
  try {
    // SW
    if (USE_SW) {
      console.time("loading:sw")

      // start sw handling
    

      // start sw check

      console.timeEnd("loading:sw")
    }

    // Plugin namespace
    window.NEPlugins = {}

    console.time("loading:main")
    await import(/* webpackIgnore: true */ "./main.js")
    console.timeEnd("loading:main")
  } catch (e) {
    console.log(e)
    // TODO: Show restore guide
  }
})()

  </script>
  <script>
    function setupTypewriter(t) {
      var HTML = t.innerHTML;

      t.innerHTML = "";

      var cursorPosition = 0,
        tag = "",
        writingTag = false,
        tagOpen = false,
        typeSpeed = 10,
        tempTypeSpeed = 0;

      var type = function () {

        if (writingTag === true) {
          tag += HTML[cursorPosition];
        }
        if (HTML[cursorPosition] === "<") {
          tempTypeSpeed = 0;
          if (tagOpen) {
            tagOpen = false;
            writingTag = true;
          } else {
            tag = "";
            tagOpen = true;
            writingTag = true;
            tag += HTML[cursorPosition];
          }
        }
        if (!writingTag && tagOpen) {
          tag.innerHTML += HTML[cursorPosition];
        }
        if (!writingTag && !tagOpen) {
          if (HTML[cursorPosition] === " ") {
            tempTypeSpeed = 0;
          }
          else {
            tempTypeSpeed = (Math.random() * typeSpeed) + 50;
          }
          t.innerHTML += HTML[cursorPosition];
        }
        if (writingTag === true && HTML[cursorPosition] === ">") {
          tempTypeSpeed = (Math.random() * typeSpeed) + 50;
          writingTag = false;
          if (tagOpen) {
            var newSpan = document.createElement("span");
            t.appendChild(newSpan);
            newSpan.innerHTML = tag;
            tag = newSpan.firstChild;
          }
        }

        cursorPosition += 1;
        if (cursorPosition < HTML.length - 1) {
          setTimeout(type, tempTypeSpeed);
        }

      };

      return {
        type: type
      };
    }
  </script>

</body>

</html>